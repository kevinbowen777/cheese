[tool.black]
line-length = 88
# include =
exclude = '''
/(
    \.git
  | __pycache__
  | .pytest_cache
  | .venv
  | staticfiles
  | build
  | dist
)/
'''

[tool.coverage.paths]
source = ["cheeses/users", "cheese/cheeses", "config/settings"]

[tool.coverage.run]
branch = true
source = ["config"]
omit = [
    "*/__init__.py",
    "*manage.py",
    "*settings*.py",
    "*urls.py",
    "*admin.py",
    "*migrations/*",
    "*tests/*",
    "*test_*.py",
    "*tests.py",
    "*wsgi.py",
    "*conftest.py",
    "*/extra*",
]
plugins = [
    "django_coverage_plugin",
]

[tool.coverage.django_coverage_plugin]
template_extensions = "html, txt, tex, email"

[tool.coverage.report]
show_missing = true

[tool.poetry]
name = "cheese"
version = "0.2.0"
description = "A cheese index application built with the Django web framework"
authors = [
    "Kevin Bowen <kevin.bowen@gmail.com>",
]
maintainers = [
]
license = "MIT"

readme = "README.md"

homepage = ""
repository = "https://github.com/kevinbowen777/cheese.git"
documentation = ""

keywords = ["django", "web-application", "cheese"]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
]

[tool.poetry.dependencies]
python = "^3.10"
cookiecutter = "^2.1.1"
Django = "4.2.2"
environs = { version = "^9.5.0", extras = ["django"] }
django-allauth = "^0.54.0"
django-model-utils = "^4.0.0"
django-crispy-forms = "^2.0"
crispy-bootstrap4 = "^2022.1"
django-autoslug = "^1.9.8"
pytz = "^2023.3"
python-slugify = "^8.0.0"
Pillow = "^9.2.0"
whitenoise = "^6.2.0"
Unidecode = "^1.1.1"
Werkzeug = "^2.1.2"
ipdb = "^0.13.3"
psycopg2-binary = "^2.8.6"
friendly = "^0.7.0"
colorama = "^0.4.4"
django-countries = "^7.3.2"
django-extensions = "^3.2.0"

[tool.poetry.group.dev.dependencies]
coverage = "^7.0.0"
black = "^23.0.0"
pylint-django = "^2.3.0"
pre-commit = "^3.0.0"
mypy = "^1.0.0"
django-stubs = "^4.0.0"
pytest = "^7.1.2"
pytest-sugar = "^0.9.4"
django-test-plus = "^2.2.0"
factory-boy = "^3.2.0"
django-debug-toolbar = "^4.0"
django-coverage-plugin = "^3.0.0"
pytest-django = "^4.5.2"
nox = "^2023.4.22"
safety = "2.4.0b1"
Sphinx = "6.2.1"
sphinx-rtd-theme = "^1.2.0"
pip-audit = "^2.5.5"
pip-check = "^2.8.1"
ruff = "^0.0.275"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
filterwarnings = [
    "ignore::django.utils.deprecation.RemovedInDjango50Warning",
]

[tool.ruff]
select = [
    "B",    # flake8-bugbear
    "C90",  # mccabe
    "DJ",   # flake8-django
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "S",    # flake8-bandit
    "W",    # pycodestyle warnings
    # "RUF",  # ruff checks
]
ignore = [
    "E501",    # line too long ({width} > {limit} characters)
    # "E203",  # slice notation whitespace (not currently supported)
    "E402",    # module level import not at top of file
    "E722",    # do not use bare except
    # "W503",  # (not currently supported)
    "ERA",     # do not autoremove commented out code
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".nox",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "__pypackages__",
    "htmlcov",
    "migrations",
    "_build",
    "build",
    "docs",
    "dist",
    "images",
    "media",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.per-file-ignores]
# "cheese/users/tests/factories.py" = ["BLK100"] (Not supported)
# "cheese/users/tests/*" = ["BLK100"] (Not supported)
"cheese/users/tests/*" = ["S101", "S106"]
"cheese/cheeses/tests/*" = ["S101", "S106"]
"config/settings/test.py" = ["S101", "S106"]
"config/asgi.py" = ["I001"]
"cheese/users/adapters.py" = ["I001"]
"cheese/users/admin.py" = ["I001"]
"manage.py" = ["I001"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
